// main.c
const float size_w = 0.3f;
vec3f dir = {
    vel.x >= 0 ? 1 : -1,
    0,
    vel.z >= 0 ? 1 : -1
};

camera->position.x += vel.x;
if(!free_cam) {
    if(
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y - 1.5f, ceilf(camera->position.z + size_w)) || 
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y - 1.5f, ceilf(camera->position.z - size_w)) ||
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y - 1.0f, ceilf(camera->position.z + size_w)) || 
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y - 1.0f, ceilf(camera->position.z - size_w)) ||
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y, ceilf(camera->position.z + size_w)) || 
        world_get_block(world, camera->position.x + size_w * dir.x, camera->position.y, ceilf(camera->position.z - size_w))
    ) {
        camera->position.x -= vel.x;
    }
}

camera->position.z += vel.z;
if(!free_cam) {
    if(
        world_get_block(world, camera->position.x + size_w, camera->position.y - 1.5f, ceilf(camera->position.z + size_w * dir.z)) || 
        world_get_block(world, camera->position.x - size_w, camera->position.y - 1.5f, ceilf(camera->position.z + size_w * dir.z)) ||
        world_get_block(world, camera->position.x + size_w, camera->position.y - 1.0f, ceilf(camera->position.z + size_w * dir.z)) || 
        world_get_block(world, camera->position.x - size_w, camera->position.y - 1.0f, ceilf(camera->position.z + size_w * dir.z)) ||
        world_get_block(world, camera->position.x + size_w, camera->position.y, ceilf(camera->position.z + size_w * dir.z)) || 
        world_get_block(world, camera->position.x - size_w, camera->position.y, ceilf(camera->position.z + size_w * dir.z))
    ) {
        camera->position.z -= vel.z;
    }
}

camera->position.y += vel.y;
if(!free_cam) { // y check
    vec3i check = {
        .y = camera->position.y - 1.5f
    };
    bool_e fall = TRUE;

    if(world_get_block(world, floorf(camera->position.x + size_w), check.y, ceilf(camera->position.z + size_w))) {
        fall = FALSE;
    } else if(world_get_block(world, floorf(camera->position.x - size_w), check.y, ceilf(camera->position.z + size_w))) {
        fall = FALSE;
    } else if(world_get_block(world, floorf(camera->position.x + size_w), check.y, ceilf(camera->position.z - size_w))) {
        fall = FALSE;
    } else if(world_get_block(world, floorf(camera->position.x - size_w), check.y, ceilf(camera->position.z - size_w))) {
        fall = FALSE;
    }

    if(!fall) {
        camera->position.y = floorf(camera->position.y) + 0.5f;
        vel.y = 0;
    }

    check.y = camera->position.y + 0.3f;

    if(world_get_block(world, floorf(camera->position.x + size_w), check.y, ceilf(camera->position.z + size_w))) {
        camera->position.y -= vel.y;
        vel.y = 0;
    } else if(world_get_block(world, floorf(camera->position.x - size_w), check.y, ceilf(camera->position.z + size_w))) {
        camera->position.y -= vel.y;
        vel.y = 0;
    } else if(world_get_block(world, floorf(camera->position.x + size_w), check.y, ceilf(camera->position.z - size_w))) {
        camera->position.y -= vel.y;
        vel.y = 0;
    } else if(world_get_block(world, floorf(camera->position.x - size_w), check.y, ceilf(camera->position.z - size_w))) {
        camera->position.y -= vel.y;
        vel.y = 0;
    }
}

if(move != 0 || move_h != 0) {
    world_sort_chunks(world, &camera->position);
}